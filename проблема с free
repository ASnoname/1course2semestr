#include <conio.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int findAndReplace(char* strIn) {

	const char *search = "12345";
	const char *newStr = "2";
	char *strTemp;
	char* strTemper;
	int m; int x = 0;

	int lenIn = strlen(strIn);
	int lenSearch = strlen(search);
	int lenNewStr = strlen(newStr);
	int i = 0, j = 0, t;

	printf("String in: %s\n", strIn);
	printf("String for search: %s\n", search);
	printf("String for replace: %s\n", newStr);

	m = lenNewStr - lenSearch;
	for (i = 0; i < lenIn; i++)
	{
		if (strIn[i] == search[0]) {
			for (j = 1; j < lenSearch; j++) {
				if (strIn[i + j] != search[j])
					break;
			}
		}
		if (j == lenSearch) {
			x++;
			j = 0;
		}
	}

	t = lenIn + x*m + 1;
	if(lenIn>t){
		t= lenIn;
	}
	strTemp = malloc(sizeof(char)*t);
	strTemper = malloc(sizeof(char)*t);
	memset(strTemper, 0, t);
	memset(strTemp, 0, t);

	
	for (i = 0; i < lenIn; i++)
		strTemper[i] = strIn[i];
	i = 0;
	while (strTemper[i] != '\0') {
		if (strTemper[i] == search[0]) {
			for (j = 1; j < lenSearch; j++) {
				if (strTemper[i + j] != search[j])
					break;
			}
			if (j == lenSearch) {
				memcpy(strTemp, strTemper, i);
				memcpy(&strTemp[i], newStr, lenNewStr);
				memcpy(&strTemp[i + lenNewStr], &strTemper[i + lenSearch], strlen(strTemper) - i - lenSearch+1);
				memcpy(strTemper, strTemp, strlen(strTemp));
				i += lenNewStr - 1;
			}
		}
		i++;
	}
	
	strTemper[t+x*m] = '\0';

	free(strTemp);
	printf("NEW String: %s\n", strTemper);
	free(strTemper);

	return 0;
}

int main() {
	char *strIn = "Price is 12345 12345 12345 dollars";

	puts("Test1 - find and replace");
	findAndReplace(strIn);

	return 0;
}